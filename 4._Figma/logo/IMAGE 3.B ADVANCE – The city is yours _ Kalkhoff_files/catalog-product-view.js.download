/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */

/**
 * @api
 */
define('Magento_Catalog/js/price-box',[
    'jquery',
    'Magento_Catalog/js/price-utils',
    'underscore',
    'mage/template',
    'jquery-ui-modules/widget'
], function ($, utils, _, mageTemplate) {
    'use strict';

    var globalOptions = {
        productId: null,
        priceConfig: null,
        prices: {},
        priceTemplate: '<span class="price"><%- data.formatted %></span>'
    };

    $.widget('mage.priceBox', {
        options: globalOptions,

        /**
         * Widget initialisation.
         * Every time when option changed prices also can be changed. So
         * changed options.prices -> changed cached prices -> recalculation -> redraw price box
         */
        _init: function initPriceBox() {
            var box = this.element;

            box.trigger('updatePrice');
            this.cache.displayPrices = utils.deepClone(this.options.prices);
        },

        /**
         * Widget creating.
         */
        _create: function createPriceBox() {
            var box = this.element;

            this.cache = {};
            this._setDefaultsFromPriceConfig();
            this._setDefaultsFromDataSet();

            box.on('reloadPrice', this.reloadPrice.bind(this));
            box.on('updatePrice', this.onUpdatePrice.bind(this));
            box.trigger('price-box-initialized');
        },

        /**
         * Call on event updatePrice. Proxy to updatePrice method.
         * @param {Event} event
         * @param {Object} prices
         */
        onUpdatePrice: function onUpdatePrice(event, prices) {
            return this.updatePrice(prices);
        },

        /**
         * Updates price via new (or additional values).
         * It expects object like this:
         * -----
         *   "option-hash":
         *      "price-code":
         *         "amount": 999.99999,
         *         ...
         * -----
         * Empty option-hash object or empty price-code object treats as zero amount.
         * @param {Object} newPrices
         */
        updatePrice: function updatePrice(newPrices) {
            var prices = this.cache.displayPrices,
                additionalPrice = {},
                pricesCode = [],
                priceValue, origin, finalPrice;

            this.cache.additionalPriceObject = this.cache.additionalPriceObject || {};

            if (newPrices) {
                $.extend(this.cache.additionalPriceObject, newPrices);
            }

            if (!_.isEmpty(additionalPrice)) {
                pricesCode = _.keys(additionalPrice);
            } else if (!_.isEmpty(prices)) {
                pricesCode = _.keys(prices);
            }

            _.each(this.cache.additionalPriceObject, function (additional) {
                if (additional && !_.isEmpty(additional)) {
                    pricesCode = _.keys(additional);
                }
                _.each(pricesCode, function (priceCode) {
                    priceValue = additional[priceCode] || {};
                    priceValue.amount = +priceValue.amount || 0;
                    priceValue.adjustments = priceValue.adjustments || {};

                    additionalPrice[priceCode] = additionalPrice[priceCode] || {
                            'amount': 0,
                            'adjustments': {}
                        };
                    additionalPrice[priceCode].amount =  0 + (additionalPrice[priceCode].amount || 0) +
                        priceValue.amount;
                    _.each(priceValue.adjustments, function (adValue, adCode) {
                        additionalPrice[priceCode].adjustments[adCode] = 0 +
                            (additionalPrice[priceCode].adjustments[adCode] || 0) + adValue;
                    });
                });
            });

            if (_.isEmpty(additionalPrice)) {
                this.cache.displayPrices = utils.deepClone(this.options.prices);
            } else {
                _.each(additionalPrice, function (option, priceCode) {
                    origin = this.options.prices[priceCode] || {};
                    finalPrice = prices[priceCode] || {};
                    option.amount = option.amount || 0;
                    origin.amount = origin.amount || 0;
                    origin.adjustments = origin.adjustments || {};
                    finalPrice.adjustments = finalPrice.adjustments || {};

                    finalPrice.amount = 0 + origin.amount + option.amount;
                    _.each(option.adjustments, function (pa, paCode) {
                        finalPrice.adjustments[paCode] = 0 + (origin.adjustments[paCode] || 0) + pa;
                    });
                }, this);
            }

            this.element.trigger('reloadPrice');
        },

        /*eslint-disable no-extra-parens*/
        /**
         * Render price unit block.
         */
        reloadPrice: function reDrawPrices() {
            var priceFormat = (this.options.priceConfig && this.options.priceConfig.priceFormat) || {},
                priceTemplate = mageTemplate(this.options.priceTemplate);

            _.each(this.cache.displayPrices, function (price, priceCode) {
                price.final = _.reduce(price.adjustments, function (memo, amount) {
                    return memo + amount;
                }, price.amount);

                price.formatted = utils.formatPrice(price.final, priceFormat);

                $('[data-price-type="' + priceCode + '"]', this.element).html(priceTemplate({
                    data: price
                }));
            }, this);
        },

        /*eslint-enable no-extra-parens*/
        /**
         * Overwrites initial (default) prices object.
         * @param {Object} prices
         */
        setDefault: function setDefaultPrices(prices) {
            this.cache.displayPrices = utils.deepClone(prices);
            this.options.prices = utils.deepClone(prices);
        },

        /**
         * Custom behavior on getting options:
         * now widget able to deep merge of accepted configuration.
         * @param  {Object} options
         * @return {mage.priceBox}
         */
        _setOptions: function setOptions(options) {
            $.extend(true, this.options, options);

            if ('disabled' in options) {
                this._setOption('disabled', options.disabled);
            }

            return this;
        },

        /**
         * setDefaultsFromDataSet
         */
        _setDefaultsFromDataSet: function _setDefaultsFromDataSet() {
            var box = this.element,
                priceHolders = $('[data-price-type]', box),
                prices = this.options.prices;

            this.options.productId = box.data('productId');

            if (_.isEmpty(prices)) {
                priceHolders.each(function (index, element) {
                    var type = $(element).data('priceType'),
                        amount = parseFloat($(element).data('priceAmount'));

                    if (type && !_.isNaN(amount)) {
                        prices[type] = {
                            amount: amount
                        };
                    }
                });
            }
        },

        /**
         * setDefaultsFromPriceConfig
         */
        _setDefaultsFromPriceConfig: function _setDefaultsFromPriceConfig() {
            var config = this.options.priceConfig;

            if (config && config.prices) {
                this.options.prices = config.prices;
            }
        }
    });

    return $.mage.priceBox;
});

define('Ponbike_WebDam360/js/360-modal',['jquery', 'reel'], function ($, reel) {
    const modalTriggers = document.querySelectorAll('[data-spinmodaltrigger]'),
        modal = document.getElementById('spinmodal');

    [...modalTriggers].forEach((trigger) => trigger.addEventListener('click', () => {
        modal.classList.toggle('visible');
        document.querySelector('body').classList.toggle('modal-open');
        $('#webdam360-reel').find('img').trigger('click');
    }));

    const images360 = (config) => {
        const imagesString = config.imagesString;

        if ($(window).width() < 960) {
            for (const [key, value] of Object.entries(imagesString)) {
                imagesString[key] = value.replace(/1280_/g, 'md_');
            }
        }

        $('#webdam360').reel({
            images: imagesString,
            shy: true
        });
    }

    return images360;
});

define('Ponbike_Bidex/js/bidex',['jquery'], function($) {
    var mageJsComponent = function(config) {

        $(document).ready(function() {
            var $button = $(config.button);
            var $modal = $(config.modal);
            var $close = $(config.close);
            var $background = $(config.background);
            var $iframe = $(config.iframe);
            var bidexBaseUrl = 'https://2.local.bidex.bike/Shops/'
            var showClass = 'bidex__modal--show';
            var loadingClass = 'bidex__modal--loading';
            var countryFilter = config.shouldSetCountryFilter ? `&SelectedCountry=${config.countryCode}&Country=${config.countryCode}` : '';

            $button.click(function(ev) {
                ev.preventDefault();

                $iframe.attr('src', `${bidexBaseUrl}?bchID=${$(this).data('style-id')}&gtin=${$(this).data('article-nr')}&showFilter=true${countryFilter}`);

                $modal.addClass(loadingClass);
                $modal.toggleClass(showClass);
                $background.toggleClass(showClass);

                $iframe.load(function () {
                    $modal.removeClass(loadingClass);
                })
            });

            $close.click(function(ev){
                $modal.toggleClass(showClass);
                $background.toggleClass(showClass);
            });

            $background.click(function(ev){
                $modal.toggleClass(showClass);
                $background.toggleClass(showClass);
            });
        });

    }
    return mageJsComponent;
});

define('js/subnav',[
    'jquery'
], function ($) {
    if (!$('.subnav')) {
        return;
    }

    $('.subnav a[href*="#"]').not('[href="#"]').click(function (event) {
        let target = $(this.hash);
        if (target.length) {
            event.preventDefault();

            const offset = $('.top-wrapper').height() + $('.subnav').height();

            $('html, body').animate({
                scrollTop: target.offset().top - offset
            }, 500);
        }
    });
})
;
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
require([
    'jquery'
], function ($) {
    'use strict';

    /**
     * Add selected swatch attributes to redirect url
     *
     * @see Magento_Catalog/js/catalog-add-to-cart
     */
    $('body').on('catalogCategoryAddToCartRedirect', function (event, data) {
        $(data.form).find('[name*="super"]').each(function (index, item) {
            var $item = $(item),
                attr;

            if ($item.attr('data-attr-name')) {
                attr = $item.attr('data-attr-name');
            } else {
                attr = $item.parent().attr('attribute-code');
            }
            data.redirectParameters.push(attr + '=' + $item.val());

        });
    });
});

define("Magento_Swatches/js/catalog-add-to-cart", function(){});

define('js/swiper-gallery',['swiper', 'jquery'], function (Swiper, $) {
    let galleryThumbs = new Swiper('.s--experienceImages .swiper-thumbs', {
        speed: 750,
        spaceBetween: 8,
        slidesPerView: 'auto',
        centeredSlides: true,
        slideToClickedSlide: true,
        freeMode: true,
        watchSlidesVisibility: true,
        watchSlidesProgress: true,
    });

    let gallery = new Swiper('.s--experienceImages__main', {
        lazy: true,
        speed: 250,
        slidesPerView: 1,
        preloadImages: false,
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
        thumbs: {
            swiper: galleryThumbs,
        },
    });

    gallery.on('slideChange', function () {
        galleryThumbs.slideTo(this.realIndex);
    });
    galleryThumbs.on('slideChange', function () {
        gallery.slideTo(this.realIndex);
    });
});

define('Kalkhoff_ProductPage/js/specifications',['jquery', 'slick'], function ($, slick) {
    'use strict';

    let specificationsSliderComponent = (config, element) => {
        $(element).on('beforeChange', function (event, slick, currentSlide, nextSlide) {
            $('.s--specifications__geometry-visual').toggle($(slick.$slides.get(nextSlide)).hasClass('s--specifications__geometry'));
        });

        $(element).slick({
            dots: true,
            fade: true,
            arrows: false,
            cssEase: 'none',
            adaptiveHeight: true,
            customPaging: function (slick, index) {
                switch (index) {
                    case 0:
                        return `<span class="s--specifications__trigger">${config.specsLabel}</span>`;
                    case 1:
                        return `<span class="s--specifications__trigger">${config.geometryLabel}</span>`;
                    default:
                        return `<span class="s--specifications__trigger">Slide ${index}</span>`;
                }
            },
            dotsClass: 's--specifications__dots',
            appendDots: '.s--specifications__navigation',
        });
    }

    return specificationsSliderComponent;
});

define('Kalkhoff_HeroImage/js/hero-image',[
    'jquery',
    'Magento_Swatches/js/swatch-renderer',
    'jquery-ui-modules/widget'
], function ($) {
    'use strict';

    $.widget('mage.heroImage', {
        options: {
            swatchAttribute: '.swatch-attribute',
            swatchSelector: '.swatch-opt',
            heroImage: '.s--singleBikeHeader__image img'
        },

        /** @inheritdoc */
        _create: function () {
            this._bind();
        },

        /**
         * @private
         */
        _bind: function () {
            var options = this.options,
                events = {};

            events['change ' + options['swatchAttribute']] = '_updateHeroImage';

            this._on(events);
        },

        /**
         *
         * @param event
         * @private
         */
        _updateHeroImage: function (event) {
            var self = this;
            $(event.handleObj.selector).each(function (index, element) {
                this.simpleProduct = $(self.options.swatchSelector).SwatchRenderer('getProduct');
                var image = self.options.spConfig.images[this.simpleProduct];
                if(image != null) {
                    $(self.options.heroImage).attr('src', image)
                }
            });
            event.stopPropagation();
        },

        /**
         *
         * @param event
         * @private
         */
        _preloadHeroImage: function (event) {
            this._preloadImages(this.options.spConfig.images);
        },

        /**
         *
         * @param images
         * @private
         */
        _preloadImages: function (images) {
            var preloadImages = new Array();
            for( var key in images ) {
                if( images.hasOwnProperty(key) ) {
                    if(images[key] != null) {
                        preloadImages[key] = new Image()
                        preloadImages[key].src = images[key]
                    }
                }
            }
        },
    });

    // dirty IE11 hacks to position bike on the right
    if($('html').hasClass('ie11')){
        var positionBike = function() {
            $('.s--singleBikeHeader__image').css({
                right: 'auto',
                left: $(window).outerWidth() / 2 + 'px'
            });
        }
        positionBike();
        $(window).resize(function(){
            positionBike();
        })
    };

    return $.mage.heroImage;
});

/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
define('Magento_Catalog/js/product/view/provider',[
    'underscore',
    'uiElement',
    'Magento_Catalog/js/product/storage/storage-service'
], function (_, Element, storage) {
    'use strict';

    return Element.extend({
        defaults: {
            identifiersConfig: {
                namespace: 'recently_viewed_product'
            },
            productStorageConfig: {
                namespace: 'product_data_storage',
                updateRequestConfig: {
                    method: 'GET',
                    dataType: 'json'
                },
                className: 'DataStorage'
            }
        },

        /**
         * Initializes
         *
         * @returns {Object} Chainable.
         */
        initialize: function () {
            this._super()
                .initIdsStorage()
                .initDataStorage();

            return this;
        },

        /**
         * Init ids storage
         *
         * @returns {Object} Chainable.
         */
        initIdsStorage: function () {
            storage.onStorageInit(this.identifiersConfig.namespace, this.idsStorageHandler.bind(this));

            return this;
        },

        /**
         * Init data storage
         *
         * @returns {Object} Chainable.
         */
        initDataStorage: function () {
            storage.onStorageInit(this.productStorageConfig.namespace, this.dataStorageHandler.bind(this));

            return this;
        },

        /**
         * Init data storage handler
         *
         * @param {Object} dataStorage - storage instance
         */
        dataStorageHandler: function (dataStorage) {
            this.productStorage = dataStorage;
            this.productStorage.add(this.data.items);
        },

        /**
         * Init ids storage handler
         *
         * @param {Object} idsStorage - storage instance
         */
        idsStorageHandler: function (idsStorage) {
            this.idsStorage = idsStorage;
            this.idsStorage.add(this.getIdentifiers());
        },

        /**
         * Gets ids from items
         *
         * @returns {Object}
         */
        getIdentifiers: function () {
            var result = {},
                productCurrentScope = this.data.productCurrentScope,
                scopeId = productCurrentScope === 'store' ? window.checkout.storeId :
                    productCurrentScope === 'group' ? window.checkout.storeGroupId :
                        window.checkout.websiteId;

            _.each(this.data.items, function (item, key) {
                result[productCurrentScope + '-' + scopeId + '-' + key] = {
                    'added_at': new Date().getTime() / 1000,
                    'product_id': key,
                    'scope_id': scopeId
                };
            }, this);

            return result;
        }
    });
});

define('Kalkhoff_Gallery/js/gallery',[
    'jquery',
    'slick'
], function ($, slick) {
    'use strict';

    $.widget('mage.pdpGallery', {
        options: {
            carouselSelector: '.product-gallery__items--main',
            thumbsSelector: '.product-gallery__thumbnails--main',
            modalCarouselSelector: '.product-gallery__items--modal',
            modalThumbsSelector: '.product-gallery__thumbnails--modal',
            hiddenThumbsClass: 'product-gallery__thumbnails--hidden',
            modalSelectorId: 'product-gallery-modal',
            modalTriggersAttribute: 'galleryModalTrigger',
            modalVisibleClass: 'visible',
            openModalBodyClass: 'modal-open'
        },

        _create: function () {
            this.initElements();
            this.initSlickSliders();
            this.initModalTriggers();
        },

        initElements: function () {
            this.$gallery = this.element.find(this.options.carouselSelector);
            this.$thumbnails = this.element.find(this.options.thumbsSelector);
            this.$modalGallery = this.element.find(this.options.modalCarouselSelector);
            this.$modalThumbnails = this.element.find(this.options.modalThumbsSelector);
            this.$modal = document.getElementById(this.options.modalSelectorId);
        },

        initModalTriggers: function () {
            let self = this;

            document.addEventListener('click', (e) => {
                if (e.target.dataset.hasOwnProperty(self.options.modalTriggersAttribute)) {
                    self.toggleModal();
                }
            });

            document.addEventListener('keyup', (e) => {
                if (
                    document.querySelector('body').classList.contains(self.options.openModalBodyClass)
                    && self.$modal.classList.contains(self.options.modalVisibleClass)
                    && e.key === "Escape"
                ) {
                    self.toggleModal();
                }
            });
        },

        toggleModal: function () {
            let self = this;

            self.$modal.classList.toggle(self.options.modalVisibleClass);
            document.querySelector('body').classList.toggle(self.options.openModalBodyClass);

            if (!document.querySelector('body').classList.contains(self.options.openModalBodyClass)) {
                $(self.$gallery).slick('slickGoTo', 0, true);
            }
        },

        initSlickSliders: function () {
            let self = this;

            let allSliderSelectors = `${self.options.thumbsSelector}, ${self.options.modalThumbsSelector}, ${self.options.carouselSelector}, ${self.options.modalCarouselSelector}`;
            let carouselConfig = {
                arrows: false,
                infinite: false,
                slidesToShow: 1,
                slidesToScroll: 1,
                asNavFor: allSliderSelectors,
            };
            let thumbsConfig = {
                slidesToShow: 3,
                slidesToScroll: 1,
                infinite: false,
                centerMode: true,
                focusOnSelect: true,
                variableWidth: true,
                asNavFor: allSliderSelectors,
                prevArrow: '<a href="#" class="slick-arrow-prev"></a>',
                nextArrow: '<a href="#" class="slick-arrow-next"></a>',
            };

            $(self.$gallery).slick(carouselConfig).on('init', () => self.initModalTriggers());
            $(self.$thumbnails).slick(thumbsConfig).on('reInit', (event, slick) => self.hideThumbnails(event, slick));
            $(self.$modalGallery).slick(carouselConfig);
            $(self.$modalThumbnails).slick(thumbsConfig).on('reInit', (event, slick) => self.hideThumbnails(event, slick));

            let slickGallery = $('.product-gallery__items--main').slick('getSlick'),
                slickModalGallery = $('.product-gallery__items--modal').slick('getSlick'),
                slickGalleryThumbs = $('.product-gallery__thumbnails--main').slick('getSlick'),
                slickModalGalleryThumbs = $('.product-gallery__thumbnails--modal').slick('getSlick'),
                simpleId = $(slickGallery.$slides.get(0)).data('simples');

            [slickGallery, slickModalGallery, slickGalleryThumbs, slickModalGalleryThumbs].map(slickGallery => {
                slickGallery.slickUnfilter();
                slickGallery.slickFilter(`[data-simples*="${simpleId}"]`);
            });
        },

        hideThumbnails: function(event, slick) {
            event.target.classList.toggle(this.options.hiddenThumbsClass, slick.slideCount === 1);
        },
    });

    return $.mage.pdpGallery;
});

/**
 *
 */
define('Kalkhoff_Gallery/js/swatch-renderer-mixin',[
    'jquery',
], function ($) {
    'use strict';

    return function (widget) {
        $.widget('mage.SwatchRenderer', widget, {
            /**
             * Replacement swatch logic for the PDP Slick gallery
             *
             * @param images
             * @param context
             * @param isInProductView
             */
            updateBaseImage: function (images, context, isInProductView) {
                let simpleId = this.getProduct();

                if (!simpleId) {
                    return;
                }

                let gallery = $('.product-gallery__items--main').slick('getSlick'),
                    modalGallery = $('.product-gallery__items--modal').slick('getSlick'),
                    galleryThumbs = $('.product-gallery__thumbnails--main').slick('getSlick'),
                    modalGalleryThumbs = $('.product-gallery__thumbnails--modal').slick('getSlick');

                let currentSimples = $(gallery.$slides.get(0)).data('simples');
                if (currentSimples && currentSimples.toString().includes(simpleId)) {
                    return;
                }

                [gallery, modalGallery, galleryThumbs, modalGalleryThumbs].map(gallery => {
                    gallery.slickUnfilter();
                    gallery.slickFilter(`[data-simples*="${simpleId}"]`);
                    gallery.$slides.each(function(index, element) {
                        $(element).attr("data-slick-index",index);
                    })
                });
            },
        });

        return $.mage.SwatchRenderer;
    }
});


define("bundles/catalog-product-view", function(){});

//# sourceMappingURL=catalog-product-view.js.map